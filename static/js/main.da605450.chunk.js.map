{"version":3,"sources":["components/Converter/Converter.js","components/Chart/Chart.js","App.js","index.js"],"names":["props","className","result","onBTC","usdVal","onETH","onChange","event","inputHandler","target","type","onUSD","btcVal","ethVal","onClick","onCalcButton","value","Chart","chartInfo","currencyName","unixDateRange","from","to","fetch","method","signal","then","data","json","dates","fullDates","prices","map","item","Date","toLocaleString","chartData","state","datasets","Object","values","sortedDatesAndPrices","setState","err","console","log","controller","AbortController","labels","label","fill","yAxisID","pointBorderWidth","pointHoverBackgroundColor","pointBackgroundColor","borderColor","Math","round","getTime","sorted","i","length","twoFirstNumbers","hasOwnProperty","this","abort","height","width","options","maintainAspectRatio","scales","yAxes","id","title","display","text","fontSize","fontColor","fontFamily","legend","layout","padding","top","bottom","Component","App","usd","btc","usdValue","eth","btcValue","ethValue","coins","currency","requestAPI","btcInfo","Promise","resolve","market_data","current_price","usdInfo","ethInfo","all","bind","application","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da605450.chunk.js","sourcesContent":["import \"./Converter.sass\"\r\n\r\nexport default props => (\r\n  <div className=\"Converter\">\r\n    <div className=\"Converter-items\">\r\n        <div className=\"currency\">\r\n          <div className=\"result\">\r\n            <span>{!props.result.onBTC.usdVal ? \"\" : `BTC: ${props.result.onBTC.usdVal}`}</span>\r\n              \r\n            <span>{!props.result.onETH.usdVal ? \"\" : `ETH: ${props.result.onETH.usdVal}`}</span>\r\n          </div>\r\n          <label className=\"label\">Dollar</label>\r\n          <span className=\"small\">USD</span>\r\n          <input onChange={event => props.inputHandler(event.target)} type=\"number\" className=\"usdInput\"/>\r\n        </div>\r\n\r\n        <div className=\"currency\">\r\n          <div className=\"result\">\r\n            <span>{!props.result.onUSD.btcVal ? \"\" : `USD: ${props.result.onUSD.btcVal}`}</span>\r\n            \r\n            <span>{!props.result.onETH.btcVal ? \"\" : `ETH: ${props.result.onETH.btcVal}`}</span>\r\n          </div>\r\n          <label className=\"label\" >Bitcoin</label>\r\n          <span className=\"small\">BTC</span>\r\n          <input onChange={event => props.inputHandler(event.target)} type=\"number\" className=\"btcInput\"/>\r\n        </div>\r\n\r\n        <div className=\"currency\">\r\n          <div className=\"result\">\r\n            <span>{!props.result.onBTC.ethVal ? \"\" : `BTC: ${props.result.onBTC.ethVal}`}</span>\r\n              \r\n            <span>{!props.result.onUSD.ethVal ? \"\" : `USD: ${props.result.onUSD.ethVal}`}</span>\r\n          </div>\r\n          <label className=\"label\" >Ether</label>\r\n          <span className=\"small\">ETH</span>\r\n          <input onChange={event => props.inputHandler(event.target)} type=\"number\" className=\"ethInput\"/>\r\n        </div>\r\n    </div>\r\n    \r\n    <input type=\"button\" onClick={props.onCalcButton} className=\"calc-btn\" value=\"КОНВЕРТИРОВАТЬ\"/>  \r\n  </div>\r\n)\r\n","import {Component} from \"react\"\r\nimport \"./Chart.sass\"\r\nimport {Line} from \"react-chartjs-2\"\r\n\r\nclass Chart extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.controller = new AbortController()\r\n    this.signal = this.controller.signal\r\n\r\n    this.state = {\r\n      chartData: {\r\n        labels: [\r\n          \"-14 дней\",\r\n          \"-13 дней\",\r\n          \"-12 дней\",\r\n          \"-11 дней\",\r\n          \"-10 дней\",\r\n          \"-9 дней\",\r\n          \"-8 дней\",\r\n          \"-7 дней\",\r\n          \"-6 дней\",\r\n          \"-5 дней\",\r\n          \"-4 дня\",\r\n          \"-3 дня\",\r\n          \"-2 дня\",\r\n          \"-1 день\",\r\n          \"Сегодня\"\r\n        ],\r\n        datasets: [\r\n          {\r\n            label: \"Bitcoin\",\r\n            data: [],\r\n            fill: false,\r\n            yAxisID: \"A\",\r\n            pointBorderWidth: 8,\r\n            pointHoverBackgroundColor: \"black\",\r\n            pointBackgroundColor: \"rgba(0,0,0,0.6)\" ,\r\n            borderColor: [\"rgb(199, 201, 0)\"]\r\n          },\r\n          {\r\n            label: \"Ethereum\",\r\n            data: [],\r\n            fill: false,\r\n            yAxisID: \"B\",\r\n            pointBorderWidth: 8,\r\n            pointHoverBackgroundColor: \"black\",\r\n            pointBackgroundColor: \"rgba(0,0,0,0.6)\" ,\r\n            borderColor: [\"rgba(154, 31, 255)\"]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  }\r\n\r\n  unixDateRange() {\r\n    return [\r\n      Math.round(new Date().getTime() / 1000 - 1209600), // Две недели \r\n      Math.round(new Date().getTime() / 1000) // Сегодняшний день\r\n    ];\r\n  }\r\n\r\n  sortedDatesAndPrices(dates, prices) {\r\n    let sorted = {}\r\n    for(let i = 0; i < dates.length; i++) {\r\n      let twoFirstNumbers = dates[i][0] + dates[i][1]\r\n      if (!sorted.hasOwnProperty(twoFirstNumbers)) {\r\n        sorted[twoFirstNumbers] = Math.round(prices[i]) // { дата: значение в долларах }\r\n      }\r\n    }\r\n    return sorted\r\n  }\r\n\r\n  chartInfo = (currencyName) => {\r\n    const [from, to] = this.unixDateRange()\r\n    fetch(`https://api.coingecko.com/api/v3/coins/${currencyName}/market_chart/range?vs_currency=usd&from=${from}&to=${to}`,\r\n    {method: \"get\", signal: this.signal})\r\n    .then(data => data.json())\r\n    .then(dates => {\r\n      let fullDates = dates.prices.map(item => new Date(item[0]).toLocaleString()) // 336\r\n      let prices = dates.prices.map(item => item[1])\r\n\r\n      let chartData = {...this.state.chartData}\r\n      if (currencyName === \"bitcoin\") {\r\n        chartData.datasets[0].data = Object.values(this.sortedDatesAndPrices(fullDates,prices))\r\n        this.setState({chartData})\r\n      } \r\n      if (currencyName === \"ethereum\") {\r\n        chartData.datasets[1].data = Object.values(this.sortedDatesAndPrices(fullDates,prices))\r\n        this.setState({chartData})\r\n      }\r\n    })\r\n    .catch(err => console.log(err))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.chartInfo(\"bitcoin\") \r\n    this.chartInfo(\"ethereum\")\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.controller.abort()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Chart\">\r\n        <h1 className=\"Chart-title\">Изменение курса криптовалют за последние 2 недели в $</h1>\r\n        <Line\r\n          data={this.state.chartData}\r\n\r\n          height={40}\r\n          width={150}\r\n          options={{\r\n\r\n            maintainAspectRatio: false,\r\n\r\n            scales: {\r\n              yAxes: [\r\n              {\r\n                id: 'A',\r\n              }, \r\n              {\r\n                id: 'B',\r\n              }\r\n            ]\r\n            },\r\n\r\n            title: {\r\n              display: false,\r\n              text: \"Изменение курса криптовалют за последние 2 недели в $\",\r\n              fontSize: 17,\r\n              fontColor: \"#000\",\r\n              fontFamily: \"Arial\"\r\n            },\r\n\r\n            legend: {\r\n              display: true,\r\n              labels: {\r\n                fontColor: \"#000\"\r\n              }\r\n            },\r\n\r\n            layout: {\r\n              padding: {\r\n                top: 0,\r\n                bottom: 0\r\n              }\r\n            }\r\n            \r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart","import React, { Component } from \"react\";\nimport \"./App.sass\";\nimport \"./reset/reset.sass\";\nimport Converter from \"./components/Converter/Converter\";\nimport Chart from \"./components/Chart/Chart\";\n\nclass App extends Component {\nconstructor(props) {\n  super(props)\n\n  this.state = {\n    btc: null,\n    usd: null,\n    eth: null,\n\n    usdValue: \"\",\n    btcValue: \"\",\n    ethValue: \"\",\n\n    coins: [\n      \"bitcoin\",\n      \"uniswap-state-dollar\",\n      \"ethereum\"\n    ],\n    result: null\n  }\n}\n\ninputHandler(currency=\"random\") {\n  switch(currency.className) {\n    case \"usdInput\": this.setState({usdValue: currency.value});\n    break;\n\n    case \"btcInput\": this.setState({btcValue: currency.value});\n    break;\n\n    case \"ethInput\": this.setState({ethValue: currency.value});\n    break;\n  }\n}\n\nonCalcButton = () => {\n  const result = {\n    onUSD: {\n      btcVal: this.state.usd.btc * this.state.usdValue,\n      ethVal: this.state.usd.eth * this.state.usdValue\n    },\n    onBTC: {\n      usdVal: this.state.btc.usd * this.state.btcValue,\n      ethVal: this.state.btc.eth * this.state.btcValue\n    },\n    onETH: {\n      usdVal: this.state.eth.usd * this.state.ethValue,\n      btcVal: this.state.eth.btc * this.state.ethValue\n    }\n  }\n  this.setState({result})\n}\n\ncomponentDidMount() {\n  this.requestAPI().then(() => {\n    this.onCalcButton();\n  })\n}\n\nrequestAPI() {\n  let btcInfo = new Promise(resolve => \n    fetch(`https://api.coingecko.com/api/v3/coins/${this.state.coins[0]}`) // BTC\n    .then(data => data.json())\n    .then(btc => {\n      let value = btc.market_data.current_price\n      btc = {usd: value.usd, eth: value.eth}\n      this.setState({btc})\n      resolve()\n    })\n  )\n\n  let usdInfo = new Promise(resolve => \n    fetch(`https://api.coingecko.com/api/v3/coins/${this.state.coins[1]}`) // USD\n    .then(data => data.json())\n    .then(usd => {\n      let value = usd.market_data.current_price\n      usd = {btc: value.btc, eth: value.eth}\n      this.setState({usd})\n      resolve()\n    })\n  )\n\n  let ethInfo = new Promise(resolve => \n    fetch(`https://api.coingecko.com/api/v3/coins/${this.state.coins[2]}`) // ETH\n    .then(data => data.json())\n    .then(eth => {\n      let value = eth.market_data.current_price\n      eth = {btc: value.btc, usd: value.usd}\n      this.setState({eth})\n      resolve()\n    })\n  )\n  return Promise.all([btcInfo, usdInfo, ethInfo])\n}\n\nrender() {\n  return (\n    <div className=\"App\">\n          <span className=\"page-name\">Конвертер валют</span>\n\n          <Chart/>\n\n          {this.state.result \n          ? <Converter\n            result={this.state.result} \n            inputHandler={this.inputHandler.bind(this)} \n            onCalcButton={this.onCalcButton}/> \n          : null}\n    </div>\n    )\n  }\n}\n\nexport default App;\n//route4\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './App';\n\nconst application = (\n  <App/>\n)\n\nReactDOM.render(\n    application,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}